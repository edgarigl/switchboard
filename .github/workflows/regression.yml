# can run locally with: "act --rm pull_request"
# see https://github.com/nektos/act

name: Regression
on: [pull_request]

jobs:
  verilator:
    name: Verilator
    runs-on: ubuntu-latest
    container: verilator/verilator:latest
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.SGH_REPO_PAT }}
          submodules: recursive

      - name: Install prerequisites
        run: |
          apt update -y
          apt install -y \
            iverilog \
            gcc-riscv64-unknown-elf \
            binutils-riscv64-unknown-elf \
            python3-dev \
            python3-pip
          python3 -m pip install --upgrade pip

      - name: Install Switchboard Python package
        run: |
          python3 -m pip install -e .

      - name: Run Python binding test
        working-directory: examples/python
        run: |
          make > out.log
          cat out.log
          grep -Fxq "PASS!" out.log

      - name: Run Python binding test (UMI)
        working-directory: examples/umiram_python
        run: |
          make > out.log
          cat out.log
          grep -Fxq "PASS!" out.log

      - name: Run Icarus simulation
        working-directory: examples/minimal-icarus
        run: |
          make > out.log
          cat out.log
          grep -Fxq "PASS!" out.log

      - name: Run Verilator simulation
        working-directory: examples/riscv-grid
        run: |
          make hello > out.log
          cat out.log
          grep -Fxq "Hello World!" out.log

      - name: Run torture tests
        working-directory: tests
        run: |
          make torture > out.log
          cat out.log
          grep -Fxq "PASS" out.log

  fpga_sim:
    name: FPGA queue simulation
    runs-on: ubuntu-latest
    container: verilator/verilator:latest
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.SGH_REPO_PAT }}
          submodules: recursive
      - name: Install prerequisites
        run: |
          apt update -y
          apt install -y libsystemc libsystemc-dev
      - name: Run FPGA loopback simulation
        working-directory: examples/fpga-loopback
        run: |
          make test > out.log
          cat out.log
          grep -Fxq "PASS" out.log
